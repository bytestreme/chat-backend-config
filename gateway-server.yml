spring:
  cloud:
    gateway:
      routes:
        - id: message-process-service
          uri: lb://message-process-service/
          predicates:
            - Path=/ws/send
          filters:
            - AuthFilter
        - id: message-delivery-service
          uri: lb://message-delivery-service/
          predicates:
            - Path=/ws/get
          filters:
            - AuthFilter
        - id: users-search-service
          uri: lb://users-search-service/
          predicates:
            - Path=/users/**
          filters:
            - AuthFilter
        - id: users-registration-service
          uri: lb://users-registration-service/
          predicates:
            - Path=/register      
        - id: message-archive-service
          uri: lb://message-archive-service/
          predicates:
            - Path=/messages/**
          filters:
            - AuthFilter
            
  data:
    mongodb:
      auto-index-creation: true
      host: host.docker.internal
      database: chat-users
      port: ${MONGO_PORT:27097}

  redis:
    port: 6379
    host: host.docker.internal
    
server:
  port: 8080
  
jwt:
  ws-auth-prefix: "auth"
  http-auth-header-prefix: "Bearer "
  key: "devglan123r"
  roles-claim: "roles"
  token-version-claim: "token-version"
  
headers:
  gateway:
    user-id-forwarded: "X-G-User"
    user-roles-forwarded: "X-G-Roles"
    user-roles-delimiter: ","
    
redis:
  token-version-key: "token-version"
  disconnect-event-topic: "disconnect-with-token"  
  
eureka:
  instance:
    hostname: host.docker.internal
    leaseRenewalIntervalInSeconds: 5
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/
      
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
