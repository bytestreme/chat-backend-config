spring:
  redis:
    host: host.docker.internal
    port: 6379
  data:
    mongodb:
      database: delivery-service
      auto-index-creation: true
      
kafka:
  consumer-group: "messages-input-group"
  auto-reset-config: "earliest"
  bootstrap:
    servers: host.docker.internal:9092
  messagesInput:
    topic: messagesInput-topic

server:
  port: 45612

headers:
  gateway:
    user-id-forwarded: "X-G-User"
    user-roles-forwarded: "X-G-Roles"

redis:
  disconnect-event-topic: "disconnect-with-token"

ws:
  route:
    get-messages: "/ws/get"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS

eureka:
  instance:
    hostname: host.docker.internal
    leaseRenewalIntervalInSeconds: 5
    instanceId: ${spring.application.name}:${random.int}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/
