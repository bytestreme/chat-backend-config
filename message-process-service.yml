spring:
  redis:
    host: host.docker.internal
    port: 6379
    
kafka:
  bootstrap:
    servers: "host.docker.internal:9092"
  messagesInput:
    topic: messagesInput-topic
    
server:
  port: 65432
  
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
      
headers:
  gateway:
    user-id-forwarded: "X-G-User"
    user-roles-forwarded: "X-G-Roles"
    
eureka:
  instance:
    instanceId: ${spring.application.name}:${random.int}
    hostname: host.docker.internal
    leaseRenewalIntervalInSeconds: 5
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/

jwt:
  key: "devglan123r"
  roles-claim: "roles"

service:
  message-delivered-key: SEND_SUCCESS
  message-not-delivered-key: SEND_FAIL

redis:
  disconnect-event-topic: "disconnect-with-token"

ws:
  route:
    send-message-route: "/ws/send"
